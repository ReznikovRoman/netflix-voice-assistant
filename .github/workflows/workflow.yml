name: Main workflow

on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Cache dependencies
        id: cache-lint
        uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.lint.txt') }}
          restore-keys: ${{ env.pythonLocation }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements.lint.txt
      - name: Run linters
        run: make lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Cache dependencies
        id: cache-test
        uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements.test.txt') }}
          restore-keys: ${{ env.pythonLocation }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements.txt -r requirements/requirements.test.txt
      - name: Run tests
        run: |
          export PYTHONUNBUFFERED=1
          export NVA_DEBUG=1
          export NVA_PROJECT_BASE_URL=http://api-voice-assistant.localhost:8012
          export NVA_SERVER_PORT=8005
          export NVA_PROJECT_NAME=netflix-voice-assistant
          export NVA_API_V1_STR=/api/v1
          export NVA_SERVER_NAME=localhost
          export NVA_SERVER_HOSTS=http://api-voice-assistant.localhost:8012
          export NVA_USE_STUBS=1
          export NVA_TESTING=1
          export NVA_CI=1
          export PYTEST_ADDOPTS="--ignore-glob=tests/functional/*"
          make test

  build-and-push-image:
    needs: [ lint, test ]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - context: .
            dockerfile: ./dev.Dockerfile
            image: yandexmiddleteamv1/netflix-voice-assistant
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}, ${{ matrix.image }}:latest
          labels: ${{ steps.meta.outputs.labels }}
